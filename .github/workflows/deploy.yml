name: Deploy to Vercel and Railway

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    if: ${{ secrets.VERCEL_TOKEN != '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL || 'https://collaboreumplatform-production.up.railway.app/api' }}

      - name: Deploy to Vercel
        if: ${{ secrets.VERCEL_TOKEN != '' }}
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

      - name: Skip Vercel deployment (no token)
        if: ${{ secrets.VERCEL_TOKEN == '' }}
        run: echo "⚠️ VERCEL_TOKEN이 설정되지 않아 Vercel 배포를 건너뜁니다. GitHub Secrets에서 VERCEL_TOKEN을 설정해주세요."

  deploy-backend:
    name: Deploy Backend to Railway
    runs-on: ubuntu-latest
    if: ${{ secrets.RAILWAY_TOKEN != '' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Railway
        if: ${{ secrets.RAILWAY_TOKEN != '' }}
        uses: railwayapp/railway-deploy@v1
        with:
          railway-token: ${{ secrets.RAILWAY_TOKEN }}
          service: ${{ secrets.RAILWAY_SERVICE_NAME }}

      - name: Skip Railway deployment (no token)
        if: ${{ secrets.RAILWAY_TOKEN == '' }}
        run: echo "⚠️ RAILWAY_TOKEN이 설정되지 않아 Railway 배포를 건너뜁니다. GitHub Secrets에서 RAILWAY_TOKEN을 설정해주세요."

  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: always()
    steps:
      - name: Check deployment status
        run: |
          echo "📊 배포 상태 확인:"
          echo "Frontend (Vercel): ${{ needs.deploy-frontend.result || 'skipped' }}"
          echo "Backend (Railway): ${{ needs.deploy-backend.result || 'skipped' }}"
          
          if [[ "${{ needs.deploy-frontend.result }}" == "success" && "${{ needs.deploy-backend.result }}" == "success" ]]; then
            echo "✅ 모든 배포 성공!"
          elif [[ "${{ needs.deploy-frontend.result }}" == "skipped" && "${{ needs.deploy-backend.result }}" == "skipped" ]]; then
            echo "⚠️ 모든 배포가 건너뛰어졌습니다. GitHub Secrets를 설정해주세요."
          else
            echo "⚠️ 일부 배포가 실패하거나 건너뛰어졌습니다."
          fi
